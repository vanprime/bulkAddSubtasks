name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.package_extension.outputs.version }}
      extension_file: ${{ steps.package_extension.outputs.extension_file }}
      commit_message: ${{ steps.get_commit.outputs.COMMIT_MESSAGE }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get the full commit history for the message

      - name: Get last commit message
        id: get_commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install Dependencies
        run: npm ci

      - name: Build Extension
        run: npm run build

      - name: Package Extension
        id: package_extension
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          EXTENSION_FILE="${NAME}_${VERSION}.zip"
          echo "extension_file=${EXTENSION_FILE}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          cd "./dist/${NAME}" && zip -r "../../${EXTENSION_FILE}" .
        shell: bash

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-artifact
          path: ${{ steps.package_extension.outputs.extension_file }}

      - name: Push to Release Branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create or switch to release branch
          git checkout -B release
          
          # Remove everything except dist and essential files
          find . -maxdepth 1 -not -name '.git' -not -name 'dist' -not -name 'package.json' -not -name 'README.md' -not -name 'LICENSE' -exec rm -rf {} + 2>/dev/null || true
          
          # Move dist contents to root
          NAME=$(node -p "require('./package.json').name")
          if [ -d "./dist/${NAME}" ]; then
            cp -r "./dist/${NAME}"/* .
            rm -rf dist
          fi
          
          # Add and commit changes
          git add -A
          git diff --staged --quiet || git commit -m "Release build for version $(node -p "require('./package.json').version")"
          
          # Push to release branch
          git push origin release --force
        shell: bash

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-artifact

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.version }}
          release_name: v${{ needs.build.outputs.version }}
          body: ${{ needs.build.outputs.commit_message }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ needs.build.outputs.extension_file }}
          asset_name: ${{ needs.build.outputs.extension_file }}
          asset_content_type: application/zip